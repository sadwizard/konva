{"code":"import { Konva } from './Global';\r\nimport { Util } from './Util';\r\nfunction _formatValue(val) {\r\n    if (Util._isString(val)) {\r\n        return '\"' + val + '\"';\r\n    }\r\n    if (Object.prototype.toString.call(val) === '[object Number]') {\r\n        return val;\r\n    }\r\n    if (Util._isBoolean(val)) {\r\n        return val;\r\n    }\r\n    return Object.prototype.toString.call(val);\r\n}\r\nexport function RGBComponent(val) {\r\n    if (val > 255) {\r\n        return 255;\r\n    }\r\n    else if (val < 0) {\r\n        return 0;\r\n    }\r\n    return Math.round(val);\r\n}\r\nexport function alphaComponent(val) {\r\n    if (val > 1) {\r\n        return 1;\r\n    }\r\n    else if (val < 0.0001) {\r\n        // chrome does not honor alpha values of 0\r\n        return 0.0001;\r\n    }\r\n    return val;\r\n}\r\nexport function getNumberValidator() {\r\n    if (Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util._isNumber(val)) {\r\n                Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a number.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexport function getNumberOrAutoValidator() {\r\n    if (Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            var isNumber = Util._isNumber(val);\r\n            var isAuto = val === 'auto';\r\n            if (!(isNumber || isAuto)) {\r\n                Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a number or \"auto\".');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexport function getStringValidator() {\r\n    if (Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util._isString(val)) {\r\n                Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a string.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexport function getFunctionValidator() {\r\n    if (Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util._isFunction(val)) {\r\n                Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a function.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexport function getNumberArrayValidator() {\r\n    if (Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util._isArray(val)) {\r\n                Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a array of numbers.');\r\n            }\r\n            else {\r\n                val.forEach(function (item) {\r\n                    if (!Util._isNumber(item)) {\r\n                        Util.warn('\"' +\r\n                            attr +\r\n                            '\" attribute has non numeric element ' +\r\n                            item +\r\n                            '. Make sure that all elements are numbers.');\r\n                    }\r\n                });\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexport function getBooleanValidator() {\r\n    if (Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            var isBool = val === true || val === false;\r\n            if (!isBool) {\r\n                Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be a boolean.');\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\nexport function getComponentValidator(components) {\r\n    if (Konva.isUnminified) {\r\n        return function (val, attr) {\r\n            if (!Util.isObject(val)) {\r\n                Util.warn(_formatValue(val) +\r\n                    ' is a not valid value for \"' +\r\n                    attr +\r\n                    '\" attribute. The value should be an object with properties ' +\r\n                    components);\r\n            }\r\n            return val;\r\n        };\r\n    }\r\n}\r\n"}
