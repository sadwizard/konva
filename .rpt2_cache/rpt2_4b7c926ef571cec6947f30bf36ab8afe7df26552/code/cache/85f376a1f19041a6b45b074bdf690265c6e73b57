{"code":"import { Animation } from './Animation';\r\nimport { Konva } from './Global';\r\n// TODO: make better module,\r\n// make sure other modules import it without global\r\nexport var DD = {\r\n    startPointerPos: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    // properties\r\n    anim: new Animation(function () {\r\n        var b = this.dirty;\r\n        this.dirty = false;\r\n        return b;\r\n    }),\r\n    isDragging: false,\r\n    justDragged: false,\r\n    offset: {\r\n        x: 0,\r\n        y: 0\r\n    },\r\n    node: null,\r\n    // methods\r\n    _drag: function (evt) {\r\n        var node = DD.node;\r\n        if (node) {\r\n            if (!DD.isDragging) {\r\n                var pos = node.getStage().getPointerPosition();\r\n                // it is possible that pos is undefined\r\n                // reattach it\r\n                if (!pos) {\r\n                    node.getStage().setPointersPositions(evt);\r\n                    pos = node.getStage().getPointerPosition();\r\n                }\r\n                var dragDistance = node.dragDistance();\r\n                var distance = Math.max(Math.abs(pos.x - DD.startPointerPos.x), Math.abs(pos.y - DD.startPointerPos.y));\r\n                if (distance < dragDistance) {\r\n                    return;\r\n                }\r\n            }\r\n            node.getStage().setPointersPositions(evt);\r\n            if (!DD.isDragging) {\r\n                DD.isDragging = true;\r\n                node.fire('dragstart', {\r\n                    type: 'dragstart',\r\n                    target: node,\r\n                    evt: evt\r\n                }, true);\r\n                // a user can stop dragging inside `dragstart`\r\n                if (!node.isDragging()) {\r\n                    return;\r\n                }\r\n            }\r\n            node._setDragPosition(evt);\r\n            // execute ondragmove if defined\r\n            node.fire('dragmove', {\r\n                type: 'dragmove',\r\n                target: node,\r\n                evt: evt\r\n            }, true);\r\n        }\r\n    },\r\n    _endDragBefore: function (evt) {\r\n        var node = DD.node;\r\n        if (node) {\r\n            DD.anim.stop();\r\n            // only fire dragend event if the drag and drop\r\n            // operation actually started.\r\n            if (DD.isDragging) {\r\n                DD.isDragging = false;\r\n                DD.justDragged = true;\r\n                Konva.listenClickTap = false;\r\n                if (evt) {\r\n                    evt.dragEndNode = node;\r\n                }\r\n            }\r\n            DD.node = null;\r\n            var drawNode = node.getLayer() || (node instanceof Konva['Stage'] && node);\r\n            if (drawNode) {\r\n                drawNode.draw();\r\n            }\r\n        }\r\n    },\r\n    _endDragAfter: function (evt) {\r\n        evt = evt || {};\r\n        var dragEndNode = evt.dragEndNode;\r\n        if (evt && dragEndNode) {\r\n            dragEndNode.fire('dragend', {\r\n                type: 'dragend',\r\n                target: dragEndNode,\r\n                evt: evt\r\n            }, true);\r\n        }\r\n    }\r\n};\r\nif (Konva.isBrowser) {\r\n    window.addEventListener('mouseup', DD._endDragBefore, true);\r\n    window.addEventListener('touchend', DD._endDragBefore, true);\r\n    window.addEventListener('mousemove', DD._drag);\r\n    window.addEventListener('touchmove', DD._drag);\r\n    window.addEventListener('mouseup', DD._endDragAfter, false);\r\n    window.addEventListener('touchend', DD._endDragAfter, false);\r\n}\r\n"}
