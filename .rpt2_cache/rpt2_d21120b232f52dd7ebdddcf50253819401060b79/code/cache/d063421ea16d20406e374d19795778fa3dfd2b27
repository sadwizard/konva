{"code":"import { Factory } from '../Factory';\r\nimport { Node } from '../Node';\r\nimport { getNumberValidator } from '../Validators';\r\n/**\r\n * Threshold Filter. Pushes any value above the mid point to\r\n *  the max and any value below the mid point to the min.\r\n *  This affects the alpha channel.\r\n * @function\r\n * @name Threshold\r\n * @memberof Konva.Filters\r\n * @param {Object} imageData\r\n * @author ippo615\r\n * @example\r\n * node.cache();\r\n * node.filters([Konva.Filters.Threshold]);\r\n * node.threshold(0.1);\r\n */\r\nexport var Threshold = function (imageData) {\r\n    var level = this.threshold() * 255, data = imageData.data, len = data.length, i;\r\n    for (i = 0; i < len; i += 1) {\r\n        data[i] = data[i] < level ? 0 : 255;\r\n    }\r\n};\r\nFactory.addGetterSetter(Node, 'threshold', 0.5, getNumberValidator(), Factory.afterSetFilter);\r\n/**\r\n * get/set threshold.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Threshold} or {@link Konva.Filters.Mask} filter.\r\n * @name threshold\r\n * @method\r\n * @memberof Konva.Node.prototype\r\n * @param {Number} threshold\r\n * @returns {Number}\r\n */\r\n"}
