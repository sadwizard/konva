{"code":"import { Factory } from '../Factory';\r\nimport { Node } from '../Node';\r\nimport { getNumberValidator } from '../Validators';\r\n/**\r\n * Noise Filter. Randomly adds or substracts to the color channels\r\n * @function\r\n * @name Noise\r\n * @memberof Konva.Filters\r\n * @param {Object} imageData\r\n * @author ippo615\r\n * @example\r\n * node.cache();\r\n * node.filters([Konva.Filters.Noise]);\r\n * node.noise(0.8);\r\n */\r\nexport var Noise = function (imageData) {\r\n    var amount = this.noise() * 255, data = imageData.data, nPixels = data.length, half = amount / 2, i;\r\n    for (i = 0; i < nPixels; i += 4) {\r\n        data[i + 0] += half - 2 * half * Math.random();\r\n        data[i + 1] += half - 2 * half * Math.random();\r\n        data[i + 2] += half - 2 * half * Math.random();\r\n    }\r\n};\r\nFactory.addGetterSetter(Node, 'noise', 0.2, getNumberValidator(), Factory.afterSetFilter);\r\n/**\r\n * get/set noise amount.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Noise} filter.\r\n * @name Konva.Node#noise\r\n * @method\r\n * @param {Number} noise\r\n * @returns {Number}\r\n */\r\n"}
